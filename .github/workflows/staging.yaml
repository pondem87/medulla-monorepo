name: Test and build Medulla apps

on:
  push:
    branches:
      - staging-0.1.4

jobs:
  test-and-build:
    name: Test and build Medulla apps
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      AWS_DEFAULT_REGION: us-west-2
      NODE_ENV: staging

    steps:
      - name: Checkout code
        uses: actions/Checkout@v3

      - name: Setup Node v20.18.0 environment
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.0'

      - name: Install dependencies
        run: npm install

      - name: Get environment variables from S3
        run: aws s3 cp s3://pfitz-configs/medulla/staging/.env .

      - name: Unit Testing
        run: npm run test

      - name: E2E Testing
        run: |
          npm run test:e2e:medulla-ai -- --forceExit
          npm run test:e2e:medulla-whatsapp -- --forceExit
          npm run test:e2e:subscription -- --forceExit
        timeout-minutes: 9

      - name: Install Nest CLI
        run: npm install -g @nestjs/cli

      - name: Build Medulla apps
        run: |
          nest build medulla-whatsapp
          nest build medulla-ai
          nest build subscription

      - name: Build Docker images
        run: docker build -f ./cicd/Dockerfile -t medulla-nest-apps:staging .

      - name: Tag images
        run: |
          docker tag medulla-nest-apps:staging registry.digitalocean.com/pfitz-cr/medulla-nest-apps:staging

      - name: Docker login DigitalOcean Container Registry
        run: docker login -u ${{secrets.DO_USER_EMAIL}} -p ${{secrets.DOCR_API_TOKEN}} registry.digitalocean.com

      - name: Push images to  registry.digitalocean.com
        run: docker push registry.digitalocean.com/pfitz-cr/medulla-nest-apps:staging